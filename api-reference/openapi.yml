openapi: 3.0.0
info:
  title: Bouncer
  description: >-
    Bouncer Email Verification API lets you validate email address and verify
    its deliverability, in the way you want.


    It’s easy to integrate, powerful, robust, secure, ultrafast and affordable.


    Let Bouncer handle verification and validation of your email addresses, with
    Real-Time (synchronous), Batch (asynchronous), and a hybrid of those two
    Batch Synchronous end-points.


    If at any time you would need extra support from our side, you can reach us
    by email at :
    [support@usebouncer.com](https://mailto:support@usebouncer.com)
  version: 1.0.0
servers:
  - url: https://api.usebouncer.com
components:
  securitySchemes:
    apikeyAuth:
      type: apiKey
      in: header
      name: x-api-key
  schemas:
    EmailRecord:
      type: object
      properties:
        email:
          type: string
        status:
          type: string
        reason:
          type: string
        domain:
          type: object
          properties:
            name:
              type: string
            acceptAll:
              type: string
            disposable:
              type: string
            free:
              type: string
        account:
          type: object
          properties:
            role:
              type: string
            disabled:
              type: string
            fullMailbox:
              type: string
        dns:
          type: object
          properties:
            type:
              type: string
            record:
              type: string
        provider:
          type: string
        score:
          type: integer
        toxic:
          type: string
        toxicity:
          type: integer
        retryAfter:
          type: string
security:
  - apikeyAuth: []
tags:
  - name: domain
    description: >-
      You can use Bouncer’s Domain Verification API to check domain information.


      It can be usefull to verify is domain has valid MX records and if it
      behaves as a "catch all" domain.
paths:
  /v1.1/credits:
    get:
      tags:
        - credits
      summary: Check available credits
      description: |-
        Retrieve available credits.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                credits: 1000
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 401
                error: Unauthorized
                message: user not found
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 429
                error: Too Many Requests
                message: too many requests
  /v1.1/email/verify:
    get:
      tags:
        - real-time
      summary: Verify email
      description: >-
        Verifies single email in real-time synchronous manner.
      parameters:
        - name: email
          in: query
          schema:
            type: string
          description: (Required) email
          example: hello@usebouncer.com
        - name: with-toxicity
          in: query
          schema:
            type: boolean
          description: 'perform additional toxicity check - one additional credit will be used'
          example: true
        - name: timeout
          in: query
          schema:
            type: integer
          description: 'timeout for verification (default: 10)'
          example: '10'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailRecord'
              examples:
                example-0:
                  summary: OK
                  value:
                    email: john@usebouncer.com
                    name: John Doe
                    status: deliverable
                    reason: accepted_email
                    domain:
                      name: usebouncer.com
                      acceptAll: 'no'
                      disposable: 'no'
                      free: 'no'
                    account:
                      role: 'no'
                      disabled: 'no'
                      fullMailbox: 'no'
                    dns:
                      type: MX
                      record: aspmx.l.google.com.
                    provider: google.com
                    score: 100
                    toxic: unknown
                example-1:
                  summary: OK (timeout)
                  value:
                    email: john@usebouncer.com
                    name: John Doe
                    status: unknown
                    reason: timeout
                    domain:
                      name: usebouncer.com
                      acceptAll: unknown
                      disposable: 'no'
                      free: 'no'
                    account:
                      role: 'no'
                      disabled: unknown
                      fullMailbox: unknown
                    dns:
                      type: MX
                      record: aspmx.l.google.com.
                    provider: google.com
                example-2:
                  summary: OK (greylisting)
                  value:
                    email: john@usebouncer.com
                    name: John Doe
                    status: unknown
                    reason: timeout
                    domain:
                      name: usebouncer.com
                      acceptAll: unknown
                      disposable: 'no'
                      free: 'no'
                    account:
                      role: 'no'
                      disabled: unknown
                      fullMailbox: unknown
                    dns:
                      type: MX
                      record: aspmx.l.google.com.
                    provider: google.com
                    retryAfter: '2022-11-24T09:55:09.029Z'
                example-3:
                  summary: OK (with didYouMean)
                  value:
                    email: john1234 @gnail.com.
                    status: undeliverable
                    reason: invalid_email
                    didYouMean: john1234@gmail.com
        '402':
          description: Payment Required
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: '402'
                error: Payment Required
                message: 0 credits left
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 429
                error: Too Many Requests
                message: too many requests
  /v1.1/email/verify/batch:
    post:
      tags:
        - batch
      summary: Create batch request
      description: >-
        Verifies one or multiple emails in a batch, offline manner.  
      requestBody:
        content:
          'application/json':
            schema:
              type: string
              example:
                [
                {"email": "john@usebouncer.com", "name": "John Doe"},
                {"email": "jenny@usebouncer.com"}
                ]
      parameters:
        - name: callback
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                batchId: 4d5fdf6b5ee97c4dbbccbfe1
                created: '2023-03-26T18:08:15.033Z'
                status: queued
                quantity: 2
                duplicates: 0
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: '402'
                error: Payment Required
                message: 1 credits left
  /v1.1/email/verify/batch/{batchId}:
    get:
      tags:
        - batch
      summary: Check status
      description: >-
        Retrieve status of your request based on request id.
      parameters:
        - name: batchId
          in: path
          schema:
            type: string
          required: true
          description: batchId from create response
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: OK (processing)
                  value:
                    batchId: 4d5fdf6b5ee97c4dbbccbfe1
                    created: '2023-03-26T15:27:26.713Z'
                    started: '2023-03-26T15:27:30.124Z'
                    status: processing
                    quantity: 2
                    duplicates: 0
                example-1:
                  summary: OK (completed)
                  value:
                    batchId: 4d5fdf6b5ee97c4dbbccbfe1
                    created: '2023-03-26T15:27:26.713Z'
                    started: '2023-03-26T15:27:30.124Z'
                    completed: '2023-03-26T15:27:43.250Z'
                    status: completed
                    quantity: 2
                    duplicates: 0
                    credits: 2
                example-2:
                  summary: OK (completed with stats)
                  value:
                    batchId: 4d5fdf6b5ee97c4dbbccbfe1
                    created: '2023-03-26T15:27:26.713Z'
                    started: '2023-03-26T15:27:30.124Z'
                    completed: '2023-03-26T15:27:43.250Z'
                    status: completed
                    quantity: 2
                    duplicates: 0
                    credits: 2
                    processed: 2
                    stats:
                      deliverable: 1
                      risky: 0
                      undeliverable: 1
                      unknown: 0
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: '404'
                error: Not Found
                message: request 1l2k3k4j5h does not exist
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 429
                error: Too Many Requests
                message: too many requests
    delete:
      tags:
        - batch
      summary: Delete request
      description: Delete emails associated with request. Results will be lost.
      parameters:
        - name: batchId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: '404'
                error: Not Found
                message: request 1l2k3k4j5h does not exist
        '405':
          description: Method Not Allowed
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: '405'
                error: Method Not Allowed
                message: batch cannot be deleted in current state
  /v1.1/email/verify/batch/{batchId}/finish:
    post:
      tags:
        - batch
      summary: Finish
      description: >-
        This endpoint will trigger internal job which will finish processing and
        return credits for remaining not verified emails.


        Results can be downloaded once status endpoint will return status
        "completed".
      requestBody:
        content: {}
      parameters:
        - name: batchId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: '400'
                error: Bad Request
                message: batch has to be running to finish
        '202':
          description: Accepted
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
  /v1.1/email/verify/batch/{batchId}/download:
    get:
      tags:
        - batch
      summary: Get results
      description: >-
        Download batch result as JSON. You can filter out what to download by
        status, eg. download only deliverable emails.
      parameters:
        - name: download
          in: query
          schema:
            type: string
          description: >-
            download emails by status, possible values: all, deliverable, risky, undeliverable, unknown
          example: all
        - name: batchId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - email: john@usebouncer.com
                  name: John Doe
                  status: deliverable
                  reason: accepted_email
                  domain:
                    name: usebouncer.com
                    acceptAll: 'no'
                    disposable: 'no'
                    free: 'no'
                  account:
                    role: 'no'
                    disabled: 'no'
                    fullMailbox: 'no'
                  dns:
                    type: MX
                    record: aspmx.l.google.com.
                  provider: google.com
                  score: 100
                  toxic: unknown
                - email: jane@usebouncer.com
                  status: deliverable
                  reason: accepted_email
                  domain:
                    name: usebouncer.com
                    acceptAll: 'no'
                    disposable: 'no'
                    free: 'no'
                  account:
                    role: 'no'
                    disabled: 'no'
                    fullMailbox: 'no'
                  dns:
                    type: MX
                    record: aspmx.l.google.com.
                  provider: google.com
                  score: 100
                  toxic: unknown
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: '404'
                error: Not Found
                message: request 1l2k3k4j5h does not exist
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
              example:
                status: '405'
                error: Method Not Allowed
                message: batch is not completed
  /v1.1/email/verify/batch/sync:
    post:
      tags:
        - batch-sync
      summary: Process with email verification queue
      description: >-
        Synchronous Batch Email Verification API verifies one or multiple emails in a batch, offline manner.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
              example:
                ["jane@usebouncer.com","john@usebouncer.com"]
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmailRecord'
              example:
                - email: jane@usebouncer.com
                  status: undeliverable
                  reason: rejected_email
                  domain:
                    name: usebouncer.com
                    acceptAll: 'no'
                    disposable: 'no'
                    free: 'no'
                  account:
                    role: 'no'
                    disabled: 'no'
                    fullMailbox: 'no'
                  dns:
                    type: MX
                    record: aspmx.l.google.com.
                  provider: google.com
                  score: 0
                  toxic: unknown
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: '404'
                error: Bad Request
                message: too many emails
        '402':
          description: Payment Required
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: '402'
                error: Payment Required
                message: 13 credits left
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 429
                error: Too Many Requests
                message: too many requests
  /v1/toxicity/list:
    post:
      tags:
        - toxicity
      summary: Create toxicity list job
      requestBody:
        content:
          application/json:
            schema:
              type: string
              example:
                ["jane@usebouncer.com","john@usebouncer.com"]
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 61c69f7907cbda25bc76f7e4
                createdAt: '2023-01-17T13:15:37.563Z'
                status: processing
        '402':
          description: Payment Required
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 402
                error: Payment Required
                message: not enough credits, 2 required
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 429
                error: Too Many Requests
                message: too many requests
  /v1/toxicity/list/{id}:
    get:
      tags:
        - toxicity
      summary: Check toxicity list job status
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: OK
                  value:
                    id: 61c69f7907cbda25bc76f7e4
                    createdAt: '2023-01-17T13:15:37.563Z'
                    status: completed
                example-1:
                  summary: Error (processing failed)
                  value:
                    id: 61c69f7907cbda25bc76f7e4
                    createdAt: '2023-01-17T13:15:37.563Z'
                    status: error
    delete:
      tags:
        - toxicity
      summary: Delete toxicity list job
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 404
                error: Not Found
                message: list not found
  /v1/toxicity/list/{id}/data:
    get:
      tags:
        - toxicity
      summary: Download toxicity list results
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - email: jane@usebouncer.com
                  toxicity: 0
                - email: hello@usebouncer.com
                  toxicity: 1
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                error: Bad Request
                message: processing is not completed yet
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 404
                error: Not Found
                message: list not found
  /v1.1/domain:
    get:
      tags:
        - domain
      summary: Verify domain
      description: >-
        Verifies single domain.

      parameters:
        - name: domain
          in: query
          required: true
          schema:
            type: string
          example: usebouncer.com
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                domain:
                  name: usebouncer.com
                  acceptAll: 'no'
                  disposable: 'no'
                  free: 'no'
                dns:
                  type: MX
                  record: aspmx.l.google.com.
                provider: google.com
                toxic: unknown
        '402':
          description: Payment Required
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: '402'
                error: Payment Required
                message: 0 credits left
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 429
                error: Too Many Requests
                message: too many requests
